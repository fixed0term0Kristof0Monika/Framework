{"content": {"suites": {"0": {"status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_A", "rerun": "0"}}, "suite_name": "Automation_Framework/Canoecontrol/test_a.py"}, "1": {"suite_name": "Automation_Framework/tenmacontrol/test_cases_tenma/test_reset.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_if_reset_correctly_voltage", "rerun": "0"}, "1": {"status": "FAIL", "message": "E   assert 2.5 == 2.7\n", "test_name": "test_if_reset_correctly_current", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}, "2": {"suite_name": "Tests/dummie_tests/test_tenma_canoe.py", "tests": {"0": {"status": "ERROR", "message": "@pytest.fixture(scope = \"module\")\n    def canoeOpenClose():\n    \n        canoe_obj.open_Canoe()\n        wait(5)\n>       canoe_obj.str_measur()\n\nTests\\dummie_tests\\test_tenma_canoe.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nAutomation_Framework\\Canoecontrol\\open_canoeobj.py:39: in str_measur\n    self.canoe_inst.start_measurement()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <py_canoe.CANoe object at 0x000002A198167A10>\n\n    def start_measurement(self) -> bool:\n        r\"\"\"Starts the measurement.\n    \n        Returns:\n            True if measurement started. else Flase.\n    \n        Examples:\n            >>> # The following example starts the measurement\n            >>> canoe_inst = CANoe()\n            >>> canoe_inst.open(r'D:\\_kms_local\\vector_canoe\\py_canoe\\demo_cfg\\demo.cfg')\n            >>> canoe_inst.start_measurement()\n        \"\"\"\n>       if not self.__canoe_objects['Measurement'].Running:\nE       KeyError: 'Measurement'\n\nC:\\Users\\KRM1CLJ\\AppData\\Roaming\\Python\\Python311\\site-packages\\py_canoe.py:272: KeyError\n", "test_name": "test_Script12", "rerun": "0"}, "1": {"status": "ERROR", "message": "@pytest.fixture(scope = \"module\")\n    def canoeOpenClose():\n    \n        canoe_obj.open_Canoe()\n        wait(5)\n>       canoe_obj.str_measur()\n\nTests\\dummie_tests\\test_tenma_canoe.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nAutomation_Framework\\Canoecontrol\\open_canoeobj.py:39: in str_measur\n    self.canoe_inst.start_measurement()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <py_canoe.CANoe object at 0x000002A198167A10>\n\n    def start_measurement(self) -> bool:\n        r\"\"\"Starts the measurement.\n    \n        Returns:\n            True if measurement started. else Flase.\n    \n        Examples:\n            >>> # The following example starts the measurement\n            >>> canoe_inst = CANoe()\n            >>> canoe_inst.open(r'D:\\_kms_local\\vector_canoe\\py_canoe\\demo_cfg\\demo.cfg')\n            >>> canoe_inst.start_measurement()\n        \"\"\"\n>       if not self.__canoe_objects['Measurement'].Running:\nE       KeyError: 'Measurement'\n\nC:\\Users\\KRM1CLJ\\AppData\\Roaming\\Python\\Python311\\site-packages\\py_canoe.py:272: KeyError\n", "test_name": "test_Script34", "rerun": "0"}, "2": {"status": "ERROR", "message": "@pytest.fixture(scope = \"module\")\n    def canoeOpenClose():\n    \n        canoe_obj.open_Canoe()\n        wait(5)\n>       canoe_obj.str_measur()\n\nTests\\dummie_tests\\test_tenma_canoe.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nAutomation_Framework\\Canoecontrol\\open_canoeobj.py:39: in str_measur\n    self.canoe_inst.start_measurement()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <py_canoe.CANoe object at 0x000002A198167A10>\n\n    def start_measurement(self) -> bool:\n        r\"\"\"Starts the measurement.\n    \n        Returns:\n            True if measurement started. else Flase.\n    \n        Examples:\n            >>> # The following example starts the measurement\n            >>> canoe_inst = CANoe()\n            >>> canoe_inst.open(r'D:\\_kms_local\\vector_canoe\\py_canoe\\demo_cfg\\demo.cfg')\n            >>> canoe_inst.start_measurement()\n        \"\"\"\n>       if not self.__canoe_objects['Measurement'].Running:\nE       KeyError: 'Measurement'\n\nC:\\Users\\KRM1CLJ\\AppData\\Roaming\\Python\\Python311\\site-packages\\py_canoe.py:272: KeyError\n", "test_name": "test_Script52", "rerun": "0"}, "3": {"status": "ERROR", "message": "@pytest.fixture(scope = \"module\")\n    def canoeOpenClose():\n    \n        canoe_obj.open_Canoe()\n        wait(5)\n>       canoe_obj.str_measur()\n\nTests\\dummie_tests\\test_tenma_canoe.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nAutomation_Framework\\Canoecontrol\\open_canoeobj.py:39: in str_measur\n    self.canoe_inst.start_measurement()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <py_canoe.CANoe object at 0x000002A198167A10>\n\n    def start_measurement(self) -> bool:\n        r\"\"\"Starts the measurement.\n    \n        Returns:\n            True if measurement started. else Flase.\n    \n        Examples:\n            >>> # The following example starts the measurement\n            >>> canoe_inst = CANoe()\n            >>> canoe_inst.open(r'D:\\_kms_local\\vector_canoe\\py_canoe\\demo_cfg\\demo.cfg')\n            >>> canoe_inst.start_measurement()\n        \"\"\"\n>       if not self.__canoe_objects['Measurement'].Running:\nE       KeyError: 'Measurement'\n\nC:\\Users\\KRM1CLJ\\AppData\\Roaming\\Python\\Python311\\site-packages\\py_canoe.py:272: KeyError\n", "test_name": "test_Script48", "rerun": "0"}, "4": {"status": "ERROR", "message": "@pytest.fixture(scope = \"module\")\n    def canoeOpenClose():\n    \n        canoe_obj.open_Canoe()\n        wait(5)\n>       canoe_obj.str_measur()\n\nTests\\dummie_tests\\test_tenma_canoe.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nAutomation_Framework\\Canoecontrol\\open_canoeobj.py:39: in str_measur\n    self.canoe_inst.start_measurement()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <py_canoe.CANoe object at 0x000002A198167A10>\n\n    def start_measurement(self) -> bool:\n        r\"\"\"Starts the measurement.\n    \n        Returns:\n            True if measurement started. else Flase.\n    \n        Examples:\n            >>> # The following example starts the measurement\n            >>> canoe_inst = CANoe()\n            >>> canoe_inst.open(r'D:\\_kms_local\\vector_canoe\\py_canoe\\demo_cfg\\demo.cfg')\n            >>> canoe_inst.start_measurement()\n        \"\"\"\n>       if not self.__canoe_objects['Measurement'].Running:\nE       KeyError: 'Measurement'\n\nC:\\Users\\KRM1CLJ\\AppData\\Roaming\\Python\\Python311\\site-packages\\py_canoe.py:272: KeyError\n", "test_name": "test_Script13_1", "rerun": "0"}, "5": {"status": "ERROR", "message": "@pytest.fixture(scope = \"module\")\n    def canoeOpenClose():\n    \n        canoe_obj.open_Canoe()\n        wait(5)\n>       canoe_obj.str_measur()\n\nTests\\dummie_tests\\test_tenma_canoe.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nAutomation_Framework\\Canoecontrol\\open_canoeobj.py:39: in str_measur\n    self.canoe_inst.start_measurement()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <py_canoe.CANoe object at 0x000002A198167A10>\n\n    def start_measurement(self) -> bool:\n        r\"\"\"Starts the measurement.\n    \n        Returns:\n            True if measurement started. else Flase.\n    \n        Examples:\n            >>> # The following example starts the measurement\n            >>> canoe_inst = CANoe()\n            >>> canoe_inst.open(r'D:\\_kms_local\\vector_canoe\\py_canoe\\demo_cfg\\demo.cfg')\n            >>> canoe_inst.start_measurement()\n        \"\"\"\n>       if not self.__canoe_objects['Measurement'].Running:\nE       KeyError: 'Measurement'\n\nC:\\Users\\KRM1CLJ\\AppData\\Roaming\\Python\\Python311\\site-packages\\py_canoe.py:272: KeyError\n", "test_name": "test_Script13_2", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 6}}, "3": {"suite_name": "Tests/dummie_tests/Basic_test/test_basic.py", "tests": {"0": {"status": "FAIL", "message": "       AssertionError: fe\n       assert False\n", "test_name": "test_Flashing", "rerun": "0"}, "1": {"status": "SKIP", "message": "('C:\\\\Workspace\\\\Open_canoe\\\\Internship_work\\\\Tests\\\\dummie_tests\\\\Basic_test\\\\test_basic.py', 146, 'Skipped: Old test')\n", "test_name": "test_SWversion", "rerun": "0"}, "2": {"status": "SKIP", "message": "('C:\\\\Workspace\\\\Open_canoe\\\\Internship_work\\\\Tests\\\\dummie_tests\\\\Basic_test\\\\test_basic.py', 146, 'Skipped: Test cannot be used now')\n", "test_name": "test_HW", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_ManulaCalibration", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 2, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}}}, "date": "October 31, 2023", "start_time": 1698749009.1827676, "total_suite": 4, "status": "FAIL", "status_list": {"pass": "3", "fail": "2", "skip": "2", "error": "6", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "13"}