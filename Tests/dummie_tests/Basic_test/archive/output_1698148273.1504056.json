{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 2}, "tests": {"0": {"status": "ERROR", "message": "@pytest.fixture\n    def gui_interface():\n    \n        layout = [\n            [sg.Text('test_name')],\n            [sg.Button('Passed'), sg.Button('Failed'), sg.Button('Skipped')],\n            [sg.Text('Skipped message'), sg.Slider(\n            'Reason 1',\n            'Reason 2',\n            'Reason 3',\n            orientation=\"h\",\n            size=(40, 15),\n            key=\"-BLUR SLIDER-\",\n        ),],\n            [sg.Text('Failed message'), sg.Input(key = '-Fail-')],\n            [sg.Button('Next')]\n        ]\n    \n        window = sg.Window('Basic tests', layout)\n    \n        while True:\n>           event, value = window.read()\n\ntest_basic.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\..\\env\\Lib\\site-packages\\PySimpleGUI\\PySimpleGUI.py:10079: in read\n    results = self._read(timeout=timeout, timeout_key=timeout_key)\n..\\..\\..\\..\\env\\Lib\\site-packages\\PySimpleGUI\\PySimpleGUI.py:10150: in _read\n    self._Show()\n..\\..\\..\\..\\env\\Lib\\site-packages\\PySimpleGUI\\PySimpleGUI.py:9890: in _Show\n    StartupTK(self)\n..\\..\\..\\..\\env\\Lib\\site-packages\\PySimpleGUI\\PySimpleGUI.py:16873: in StartupTK\n    _convert_window_to_tk(window)\n..\\..\\..\\..\\env\\Lib\\site-packages\\PySimpleGUI\\PySimpleGUI.py:16757: in _convert_window_to_tk\n    PackFormIntoFrame(window, master, window)\n..\\..\\..\\..\\env\\Lib\\site-packages\\PySimpleGUI\\PySimpleGUI.py:16162: in PackFormIntoFrame\n    tkscale = element.Widget = tk.Scale(tk_row_frame, orient=element.Orientation,\nC:\\Program Files\\Python311\\Lib\\tkinter\\__init__.py:3521: in __init__\n    Widget.__init__(self, master, 'scale', cnf, kw)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tkinter.Scale object .!toplevel.!frame3.!scale>, master = <tkinter.Frame object .!toplevel.!frame3>, widgetName = 'scale', cnf = {'bd': 0, 'font': ('Helvetica', 10), 'from_': 'R', 'length': 360, ...}\nkw = {'bd': 0, 'font': ('Helvetica', 10), 'from_': 'R', 'length': 360, ...}, extra = ()\n\n    def __init__(self, master, widgetName, cnf={}, kw={}, extra=()):\n        \"\"\"Construct a widget with the parent widget MASTER, a name WIDGETNAME\n        and appropriate options.\"\"\"\n        if kw:\n            cnf = _cnfmerge((cnf, kw))\n        self.widgetName = widgetName\n        self._setup(master, cnf)\n        if self._tclCommands is None:\n            self._tclCommands = []\n        classes = [(k, v) for k, v in cnf.items() if isinstance(k, type)]\n        for k, v in classes:\n            del cnf[k]\n>       self.tk.call(\n            (widgetName, self._w) + extra + self._options(cnf))\nE       _tkinter.TclError: expected floating-point number but got \"R\"\n\nC:\\Program Files\\Python311\\Lib\\tkinter\\__init__.py:2628: TclError\n", "test_name": "test_first", "rerun": "0"}, "1": {"status": "ERROR", "message": "@pytest.fixture\n    def gui_interface():\n    \n        layout = [\n            [sg.Text('test_name')],\n            [sg.Button('Passed'), sg.Button('Failed'), sg.Button('Skipped')],\n            [sg.Text('Skipped message'), sg.Slider(\n            'Reason 1',\n            'Reason 2',\n            'Reason 3',\n            orientation=\"h\",\n            size=(40, 15),\n            key=\"-BLUR SLIDER-\",\n        ),],\n            [sg.Text('Failed message'), sg.Input(key = '-Fail-')],\n            [sg.Button('Next')]\n        ]\n    \n        window = sg.Window('Basic tests', layout)\n    \n        while True:\n>           event, value = window.read()\n\ntest_basic.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\..\\env\\Lib\\site-packages\\PySimpleGUI\\PySimpleGUI.py:10079: in read\n    results = self._read(timeout=timeout, timeout_key=timeout_key)\n..\\..\\..\\..\\env\\Lib\\site-packages\\PySimpleGUI\\PySimpleGUI.py:10150: in _read\n    self._Show()\n..\\..\\..\\..\\env\\Lib\\site-packages\\PySimpleGUI\\PySimpleGUI.py:9890: in _Show\n    StartupTK(self)\n..\\..\\..\\..\\env\\Lib\\site-packages\\PySimpleGUI\\PySimpleGUI.py:16873: in StartupTK\n    _convert_window_to_tk(window)\n..\\..\\..\\..\\env\\Lib\\site-packages\\PySimpleGUI\\PySimpleGUI.py:16757: in _convert_window_to_tk\n    PackFormIntoFrame(window, master, window)\n..\\..\\..\\..\\env\\Lib\\site-packages\\PySimpleGUI\\PySimpleGUI.py:16162: in PackFormIntoFrame\n    tkscale = element.Widget = tk.Scale(tk_row_frame, orient=element.Orientation,\nC:\\Program Files\\Python311\\Lib\\tkinter\\__init__.py:3521: in __init__\n    Widget.__init__(self, master, 'scale', cnf, kw)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tkinter.Scale object .!toplevel2.!frame3.!scale>, master = <tkinter.Frame object .!toplevel2.!frame3>, widgetName = 'scale', cnf = {'bd': 0, 'font': ('Helvetica', 10), 'from_': 'R', 'length': 360, ...}\nkw = {'bd': 0, 'font': ('Helvetica', 10), 'from_': 'R', 'length': 360, ...}, extra = ()\n\n    def __init__(self, master, widgetName, cnf={}, kw={}, extra=()):\n        \"\"\"Construct a widget with the parent widget MASTER, a name WIDGETNAME\n        and appropriate options.\"\"\"\n        if kw:\n            cnf = _cnfmerge((cnf, kw))\n        self.widgetName = widgetName\n        self._setup(master, cnf)\n        if self._tclCommands is None:\n            self._tclCommands = []\n        classes = [(k, v) for k, v in cnf.items() if isinstance(k, type)]\n        for k, v in classes:\n            del cnf[k]\n>       self.tk.call(\n            (widgetName, self._w) + extra + self._options(cnf))\nE       _tkinter.TclError: expected floating-point number but got \"R\"\n\nC:\\Program Files\\Python311\\Lib\\tkinter\\__init__.py:2628: TclError\n", "test_name": "test_second", "rerun": "0"}}, "suite_name": "test_basic.py"}}}, "date": "October 24, 2023", "start_time": 1698148264.2257955, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "2", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "2"}